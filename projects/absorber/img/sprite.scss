// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$amort-name: 'amort';
$amort-x: 0px;
$amort-y: 0px;
$amort-offset-x: 0px;
$amort-offset-y: 0px;
$amort-width: 206px;
$amort-height: 206px;
$amort-total-width: 690px;
$amort-total-height: 506px;
$amort-image: 'sprite.png';
$amort: (0px, 0px, 0px, 0px, 206px, 206px, 690px, 506px, 'sprite.png', 'amort', );
$close-name: 'close';
$close-x: 600px;
$close-y: 108px;
$close-offset-x: -600px;
$close-offset-y: -108px;
$close-width: 18px;
$close-height: 18px;
$close-total-width: 690px;
$close-total-height: 506px;
$close-image: 'sprite.png';
$close: (600px, 108px, -600px, -108px, 18px, 18px, 690px, 506px, 'sprite.png', 'close', );
$engine-name: 'engine';
$engine-x: 206px;
$engine-y: 0px;
$engine-offset-x: -206px;
$engine-offset-y: 0px;
$engine-width: 206px;
$engine-height: 206px;
$engine-total-width: 690px;
$engine-total-height: 506px;
$engine-image: 'sprite.png';
$engine: (206px, 0px, -206px, 0px, 206px, 206px, 690px, 506px, 'sprite.png', 'engine', );
$hachback-name: 'hachback';
$hachback-x: 0px;
$hachback-y: 412px;
$hachback-offset-x: 0px;
$hachback-offset-y: -412px;
$hachback-width: 292px;
$hachback-height: 94px;
$hachback-total-width: 690px;
$hachback-total-height: 506px;
$hachback-image: 'sprite.png';
$hachback: (0px, 412px, 0px, -412px, 292px, 94px, 690px, 506px, 'sprite.png', 'hachback', );
$icon-wheel-name: 'icon wheel';
$icon-wheel-x: 412px;
$icon-wheel-y: 108px;
$icon-wheel-offset-x: -412px;
$icon-wheel-offset-y: -108px;
$icon-wheel-width: 98px;
$icon-wheel-height: 111px;
$icon-wheel-total-width: 690px;
$icon-wheel-total-height: 506px;
$icon-wheel-image: 'sprite.png';
$icon-wheel: (412px, 108px, -412px, -108px, 98px, 111px, 690px, 506px, 'sprite.png', 'icon wheel', );
$jeep-name: 'jeep';
$jeep-x: 412px;
$jeep-y: 0px;
$jeep-offset-x: -412px;
$jeep-offset-y: 0px;
$jeep-width: 278px;
$jeep-height: 108px;
$jeep-total-width: 690px;
$jeep-total-height: 506px;
$jeep-image: 'sprite.png';
$jeep: (412px, 0px, -412px, 0px, 278px, 108px, 690px, 506px, 'sprite.png', 'jeep', );
$oil-name: 'oil';
$oil-x: 0px;
$oil-y: 206px;
$oil-offset-x: 0px;
$oil-offset-y: -206px;
$oil-width: 206px;
$oil-height: 206px;
$oil-total-width: 690px;
$oil-total-height: 506px;
$oil-image: 'sprite.png';
$oil: (0px, 206px, 0px, -206px, 206px, 206px, 690px, 506px, 'sprite.png', 'oil', );
$rock-name: 'rock';
$rock-x: 510px;
$rock-y: 108px;
$rock-offset-x: -510px;
$rock-offset-y: -108px;
$rock-width: 90px;
$rock-height: 90px;
$rock-total-width: 690px;
$rock-total-height: 506px;
$rock-image: 'sprite.png';
$rock: (510px, 108px, -510px, -108px, 90px, 90px, 690px, 506px, 'sprite.png', 'rock', );
$spritesheet-width: 690px;
$spritesheet-height: 506px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($amort, $close, $engine, $hachback, $icon-wheel, $jeep, $oil, $rock, );
$spritesheet: (690px, 506px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url('../img/#{$sprite-image}');
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
